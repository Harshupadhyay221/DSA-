# Find First and Last Position of Element in Sorted Array
class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int start = 0;
        int end = nums.size() - 1;
        int first = -1 , last = -1 ;
        int mid ;

        // Finding the first occurrence
        while(start <= end) {
            mid = start + (end - start) / 2;
            if(nums[mid] == target) {
                first = mid;
                end = mid - 1; // Keep searching in the left half
            } else if (nums[mid] < target) {
                start = mid + 1;
            } else {
                end = mid - 1;
            }
        }

        start = 0;
        end = nums.size() - 1;

        // Finding the last occurrence
        while(start <= end) {
            mid = start + (end - start) / 2;
            if(nums[mid] == target) {
                last = mid;
                start = mid + 1; // Keep searching in the right half
            } else if (nums[mid] < target) {
                start = mid + 1;
            } else {
                end = mid - 1;
            }
        }

        vector<int> ans(2);
        ans[0] = first;
        ans[1] = last;
        return ans;
    } 
};
